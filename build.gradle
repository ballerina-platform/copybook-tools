/*
 * Copyright (c) 2023 WSO2 LLC. (http://www.wso2.com) All Rights Reserved.
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
*/

plugins {
    id 'com.github.spotbugs'
    id 'de.undercouch.download'
    id 'net.researchgate.release'
    id 'jacoco'
}

allprojects {
    group = project.group
    version = project.version

    apply plugin: 'maven-publish'
    apply plugin: 'java-library'
    apply plugin: 'jacoco'

    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url = 'https://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://maven.pkg.github.com/ballerina-platform/*'
            credentials {
                username System.getenv("packageUser")
                password System.getenv("packagePAT")
            }
        }
    }

    ext {
        snapshotVersion = '-SNAPSHOT'
        timestampedVersionRegex = '.*-\\d{8}-\\d{6}-\\w.*\$'
    }
}

subprojects {
    configurations {
        jbalTools
    }

    dependencies {
        /* JBallerina Tools */
        jbalTools("org.ballerinalang:jballerina-tools:${ballerinaLangVersion}") {
            transitive = false
        }
    }
}

build {
    dependsOn(":copybook-cli:build")
    dependsOn(":copybook-tool:build")
}

def moduleVersion = project.version.replace("-SNAPSHOT", "")

release {
    buildTasks = ['build']
    failOnSnapshotDependencies = true
    versionPropertyFile = 'gradle.properties'
    tagTemplate = 'v${version}'

    git {
        requireBranch = "release-${moduleVersion}"
        pushToRemote = 'origin'
    }
}
